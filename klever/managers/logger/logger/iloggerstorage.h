#ifndef ILOGGERSTORAGE_H
#define ILOGGERSTORAGE_H

#include "loggerdata.h"

/*******************************************************************************
 *                   Интерфейс на внешний источник данных ( хранилище ).
 *******************************************************************************/

/*!
 *  \brief Интерфейс внешнего хранилища данных.
 *  \details Описывает открытии сессии работы с хранилищем, запись,
 * чтение и закрытие.
 *  \todo Необходимо реализовать еще функции по выборке данных из журнала.
 */
class ILoggerStorage {

  public:

  /*!
   *  \brief Конструктор интерфейса хранилища
   */
  ILoggerStorage(){}

    /*!
     *  \brief Деструктор интерфейса хранилища
     */
  virtual ~ILoggerStorage(){}

  /*!
   *  \brief Открытие сессии работы с хранилищем
   *  \details Необходимо реализовать подключение к БД, либо
   * к файлу.
   */
  virtual uint openSession( QString fileName ) = 0;

  /*!
   *  \brief Закрытие сессии работы с хранилищем
   *  \details Необходимо реализовать отключение от БД, либо
   * от файлу.
   */
  virtual uint closeSession() = 0;

  /*!
   *  \brief Поместить запись в хранилище
   *  \details Необходимо реализовать добавления записи в хранилище БД,
   *  либо файла
   */
  virtual uint push( messageStructure msg ) = 0;

  /*!
   *  \brief Забрать значение из хранилища
   *  \details Необходимо реализовать процесс получения данных их хранилища
   *  \todo Функция спорная. Так как это компонент журналирования, то
   *  в хранилище данные должны только поступать, возможно это тут не нужно.
   */
  virtual messageStructure pop() = 0;

};

#endif // ILOGGERSTORAGE_H
